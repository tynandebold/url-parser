{"version":3,"sources":["components/Form/index.js","index.js","App.js"],"names":["Form","_ref","url","submitForm","updateInput","react_default","a","createElement","onSubmit","className","onChange","type","value","ReactDOM","render","output","_useState","useState","_useState2","Object","slicedToArray","message","setMessage","_useState3","_useState4","result","setResult","_useState5","_useState6","setUrl","JSON","stringify","undefined","Fragment","href","target","rel","e","preventDefault","length","test","parsedUrl","require","parse","parseUrl","document","getElementById"],"mappings":"qKAGeA,SAAA,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,IAAKC,EAAPF,EAAOE,WAAYC,EAAnBH,EAAmBG,YAAnB,OACbC,EAAAC,EAAAC,cAAA,QAAMC,SAAUL,GACdE,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,YACVC,SAAUN,EACVO,KAAK,OACLC,MAAOV,IACTG,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaE,KAAK,SAASC,MAAM,eCPxDC,IAASC,OAAOT,EAAAC,EAAAC,cCDD,WAAe,IA8BxBQ,EA9BwBC,EACEC,mBAAS,IADXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrBK,EADqBH,EAAA,GACZI,EADYJ,EAAA,GAAAK,EAEAN,mBAAS,IAFTO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAErBE,EAFqBD,EAAA,GAEbE,EAFaF,EAAA,GAAAG,EAGNV,mBAAS,IAHHW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGrBzB,EAHqB0B,EAAA,GAGhBC,EAHgBD,EAAA,GAkC5B,OAHIH,IACFV,EAASV,EAAAC,EAAAC,cAAA,WAAMuB,KAAKC,UAAUN,OAAQO,EAAW,KAGjD3B,EAAAC,EAAAC,cAACF,EAAAC,EAAM2B,SAAP,KACE5B,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,2DACiD,IAC/CF,EAAAC,EAAAC,cAAA,KACE2B,KAAK,0CACLC,OAAO,SACPC,IAAI,uBAHN,QAMK,IARP,KASK,IACH/B,EAAAC,EAAAC,cAAA,KACE2B,KAAK,yGACLC,OAAO,SACPC,IAAI,uBAHN,QAVF,oEAmBA/B,EAAAC,EAAAC,cAACP,EAAD,CAAMG,WA/CV,SAAsBkC,GACpBA,EAAEC,iBAEiB,IAAfpC,EAAIqC,SAEM,gCAAgCC,KAAKtC,GASrD,WACE,IACMuC,EADQC,EAAQ,GACJC,CAAMzC,GAAK,GAC7BoB,EAAW,IACXI,EAAUe,GAPVG,GAJEtB,EAAW,+BAwCqBpB,IAAKA,EAAKE,YAnD9C,SAAsBiC,GACpBR,EAAOQ,EAAEF,OAAOvB,UAmDbS,EACAN,IDzDS,MAAS8B,SAASC,eAAe","file":"static/js/main.7a912836.chunk.js","sourcesContent":["import './style.css';\nimport React from 'react';\n\nexport default ({url, submitForm, updateInput}) => (\n  <form onSubmit={submitForm}>\n    <label>Enter a URL</label>\n    <div className=\"input-wrapper\">\n      <input\n        className=\"searchbox\"\n        onChange={updateInput}\n        type=\"text\"\n        value={url} />\n      <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n    </div>\n  </form>\n);\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import './index.css';\nimport React, { useState } from 'react';\nimport Form from './components/Form/';\n\nexport default function App() {\n  const [message, setMessage] = useState('');\n  const [result, setResult] = useState('');\n  const [url, setUrl] = useState('');\n\n  function handleChange(e) {\n    setUrl(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (url.length === 0) return;\n\n    const valid = /^(ftp|http|https):\\/\\/[^ \"]+$/.test(url);\n    if (!valid) {\n      setMessage('Please enter a valid URL.');\n      return;\n    }\n\n    parseUrl();\n  }\n\n  function parseUrl() {\n    const parse = require('url-parse');\n    const parsedUrl = parse(url, true);\n    setMessage('');\n    setResult(parsedUrl);\n  }\n\n  let output;\n  if (result) {\n    output = <pre>{JSON.stringify(result, undefined, 2)}</pre>;\n  }\n  return (\n    <React.Fragment>\n      <h1>URL Parser</h1>\n      <h3>\n        Working on parsing a URL? Using something like{' '}\n        <a\n          href=\"https://www.npmjs.com/package/url-parse\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          this\n        </a>{' '}\n        or{' '}\n        <a\n          href=\"https://nodejs.org/docs/latest/api/url.html#url_url_parse_urlstring_parsequerystring_slashesdenotehost\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          this\n        </a>\n        ? Sometimes it's nice to see what's returned in your URL object.\n      </h3>\n      <Form submitForm={handleSubmit} url={url} updateInput={handleChange} />\n      {message}\n      {output}\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}