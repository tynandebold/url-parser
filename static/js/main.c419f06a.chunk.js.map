{"version":3,"sources":["components/Form/index.js","App.jsx","index.jsx"],"names":["updateInput","url","onSubmit","e","preventDefault","className","onChange","placeholder","type","value","App","useState","message","setMessage","result","setResult","setUrl","useEffect","length","test","urlParse","href","tabIndex","target","rel","Form","JSON","stringify","undefined","ReactDOM","render","document","getElementById"],"mappings":"kMAGe,G,MAAA,YAA2B,IAAxBA,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,IAC7B,OACE,0BAAMC,SAAU,SAACC,GAAD,OAAOA,EAAEC,mBACvB,yBAAKC,UAAU,iBACb,2BACEA,UAAU,YACVC,SAAUN,EACVO,YAAY,cACZC,KAAK,OACLC,MAAOR,QCNF,SAASS,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOV,EAAP,KAAYe,EAAZ,KA2BA,OArBAC,qBAAU,WACR,OAAmB,IAAfhB,EAAIiB,QACNH,EAAU,WACVF,EAAW,KAKC,gCAAgCM,KAAKlB,IASnDY,EAAW,SACXE,EAAUK,EAASnB,GAAK,MAPtBY,EAAW,kCACXE,EAAU,SAOX,CAACd,IAGF,oCACE,0CACA,6EACiD,IAC/C,uBACEoB,KAAK,0CACLC,UAAW,EACXC,OAAO,SACPC,IAAI,uBAJN,QAOK,IATP,KAUK,IACH,uBACEH,KAAK,yGACLC,UAAW,EACXC,OAAO,SACPC,IAAI,uBAJN,QAXF,0GAsBA,kBAACC,EAAD,CAAMxB,IAAKA,EAAKD,YAlDC,SAACG,GACpBa,EAAOb,EAAEoB,OAAOd,UAkDbG,EACAE,EAAS,6BAAMY,KAAKC,UAAUb,OAAQc,EAAW,IAAY,MC1DpEC,IAASC,OAAO,kBAACpB,EAAD,MAASqB,SAASC,eAAe,U","file":"static/js/main.c419f06a.chunk.js","sourcesContent":["import './style.css';\nimport React from 'react';\n\nexport default ({ updateInput, url }) => {\n  return (\n    <form onSubmit={(e) => e.preventDefault()}>\n      <div className=\"input-wrapper\">\n        <input\n          className=\"searchBox\"\n          onChange={updateInput}\n          placeholder=\"Enter a URL\"\n          type=\"text\"\n          value={url}\n        />\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport * as urlParse from 'url-parse/dist/url-parse';\nimport Form from './components/Form';\n\nimport './index.css';\n\nexport default function App() {\n  const [message, setMessage] = useState('');\n  const [result, setResult] = useState(null);\n  const [url, setUrl] = useState('');\n\n  const handleChange = (e) => {\n    setUrl(e.target.value);\n  };\n\n  useEffect(() => {\n    if (url.length === 0) {\n      setResult(null);\n      setMessage('');\n\n      return;\n    }\n\n    const valid = /^(ftp|http|https):\\/\\/[^ \"]+$/.test(url);\n\n    if (!valid) {\n      setMessage('Please enter a valid URL.');\n      setResult(null);\n\n      return;\n    }\n\n    setMessage('');\n    setResult(urlParse(url, true));\n  }, [url]);\n\n  return (\n    <>\n      <h1>URL Parser</h1>\n      <h3>\n        Working on parsing a URL? Using something like{' '}\n        <a\n          href=\"https://www.npmjs.com/package/url-parse\"\n          tabIndex={-1}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          this\n        </a>{' '}\n        or{' '}\n        <a\n          href=\"https://nodejs.org/docs/latest/api/url.html#url_url_parse_urlstring_parsequerystring_slashesdenotehost\"\n          tabIndex={-1}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          this\n        </a>\n        ? Sometimes it&apos;s nice to see what&apos;s returned in your URL\n        object. Use this simple tool to do just that.\n      </h3>\n      <Form url={url} updateInput={handleChange} />\n      {message}\n      {result ? <pre>{JSON.stringify(result, undefined, 2)}</pre> : null}\n    </>\n  );\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}